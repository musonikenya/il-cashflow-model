<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Cash_flow extends CI_Controller {

	public function __construct()
        {
                parent::__construct();
        }
public function index()
	{

error_reporting(0);

		$webhookPost = file_get_contents("php://input");
							if(isset($webhookPost))
									{
										$notification = json_decode($webhookPost);
										http_response_code(200); //ok

										$this->load->helper('file');

												if ( !write_file('./docs/hookPosts-true.txt', $webhookPost . '\r\n', 'w+')){
																	// echo 'Unable to write the file';
																 $data['msg'] = 'Failed. Unable to write data to file';
																write_file('./docs/write-fail.txt', $data . "\r\n", 'w+');
															}
															if(isset($notification->loanId))
															{
																$webHookData = array(
																'officeId' => $notification->officeId,
																'clientId' => $notification->clientId,
																'loanId' => $notification->loanId,
																'resourceId' => $notification->resourceId,
																'processed' => 0,
																'timestamp' => date('Y-m-d H:i:s')
															);
															$accessArray =	$this->CashFlow->webHookRecord($webHookData); //saving the data to db
															write_file('./docs/hookPosts-Processed-2.txt', $webHookData . "\r\n", 'w+');
																		//Processing application
															//$cashflowFile =	$this->computeCashFlowModel($webHookData);
															$cashflowFile =	$this->computecashflowmodel->computeCashFlowModel($webHookData);
															//To view all the errors generated by this function...move the method to this script.
															$cashflowSummaryData = 	$this->generatefinancialsummary->generateFinancialSummary($cashflowFile); //getting the summary
																		//Sending the data to server
																	$summaryStatus =	$this->postFinancialSummary($cashflowSummaryData);
																	$fileStatus =	$this->uploadCashflowModel($cashflowSummaryData);
																				if(($summaryStatus['code'] == 200) && ($fileStatus['code'] == 200)){
																								//setting the loan as processed in the db
																							$update =	$this->CashFlow->updateWebHookRecord($accessArray); //saving the data to db
																					return http_response_code(200); //response
																				}
															}else{
																return http_response_code(204); //no content
															}
									}else {
											return http_response_code(204); //no content
									}

/*
									//This block is to be used in testing the flow of data
													$webHookData = array(
																		'loanId' => 153036,
																		'officeId' => 13,
																	);

															//		echo "<pre>";
															//	print_r($webHookData);
															//		echo "</pre>";
															//		echo $webHookData['loanId'];
															//		exit;

												$cashflowFile =	$this->computecashflowmodel->computeCashFlowModel($webHookData);
												echo "<pre>";
												echo "string";
												print_r($cashflowFile);
												echo "</pre>";
*/
/*
																	$startTime = microtime(true);
																	$cashflowFile =	$this->computecashflowmodel->computeCashFlowModel($webHookData);
																	//To view all the errors generated by this function...move the method to this script.
																	$cashflowSummaryData = 	$this->generatefinancialsummary->generateFinancialSummary($cashflowFile); //getting the summary
																			//write logic that checks whether the response has resource id if it does not use post/put
																			$summaryStatus =	$this->postFinancialSummary($cashflowSummaryData);
																				//write logic that ckecks if the upload is sucessful with the resource id
																			$fileStatus =	$this->uploadCashflowModel($cashflowSummaryData);


																	echo "summary cashflow";
																	echo "<br>";
																	echo "<pre>";
																	print_r($cashflowSummaryData);
																	echo "<br>";
																	echo "<pre>";
																//	print_r(json_decode($summaryStatus));
																	echo "<br>";
																	echo "<br>";
																	print_r($summaryStatus);
																	echo "</pre>";
																	echo "<br>";
																	echo "<br>";
																	print_r($fileStatus);
																	echo "</pre>";
																	echo "Reached here (This is the end of the file execution at index) <br>";
*/
	}
	public function generateFinancialSummaryCalculation()
    	{
    		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    																				//Financial Summary Data
    		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				ini_set('date.timezone', 'UTC'); //setting the default timezone
    	 $time = date('H:i:s');  //set the time  for document
    		 //$inputFile = $cashflowFile['path'];
				 $inputFile = './docs/Cashflow6.xlsx';
    		 /**  Identify the type of $inputFileName  **/
    			 $inputFileType = PHPExcel_IOFactory::identify($inputFile);
    		 /**  Create a new Reader of the type defined in $inputFileType  **/
    			 $objReader = PHPExcel_IOFactory::createReader($inputFileType);
    		 /**  Advise the Reader to load all Worksheets  **/
    				 $objReader->setLoadAllSheets();

    			 $objPHPExcel = $objReader->load($inputFile);
    						 $sheet = $objPHPExcel->setActiveSheetIndex(1);

                 $cashflowResultData['summary']=	 array(
									 												"Row" => 'Assets and Liabilities',
									 												"Row" => 'row 1',
                                         "Value" => $sheet->getCell('C8')->getCalculatedValue(),
                                         "formla" => $sheet->getCell('C8')->getValue(),
																				 "Row2" => 'row 2',
																				 "Value2" => $sheet->getCell('D8')->getCalculatedValue(),
                                         "formla2" => $sheet->getCell('D8')->getValue(),
                                       );
    												 return $cashflowResultData;
    	}

function postFinancialSummary($cashflowSummaryData)
			{
										$data['urlExtention'] = "/datatables/cct_CashFlowFinancialSummary/" . $cashflowSummaryData['loanId'] ;
										$data['postData'] = json_encode($cashflowSummaryData['summary']);
										$data['httpRequestMethod'] = "POST"; //default is post
										$feedback =	$this->cashflowlibrary->curlPostData($data); //uploading data

												$msg = json_decode($feedback); //decoding the feedback
											if(($msg->httpStatusCode) == 403){
												//if the post failed try PUT
														$data['urlExtention'] = "/datatables/cct_CashFlowFinancialSummary/" . $cashflowSummaryData['loanId'] ;
														$data['postData'] = json_encode($cashflowSummaryData['summary']);
														$data['httpRequestMethod'] = "PUT"; //default is post
												$feedback =	$this->cashflowlibrary->curlPostData($data); //uploading data
											}
											//If the posting/updating is a success
												$msg = json_decode($feedback); //decoding the feedback
											if(isset($msg->resourceId)){
													$feedback = array('status' => "success", 'code' => http_response_code(200));
												//	return json_encode($feedback);
													return $feedback;
											}
			}
function uploadCashflowModel($cashflowSummaryData)
			{
										$data['urlExtention'] = "/cct_CashFlowFinancialSummary/". $cashflowSummaryData['loanId'] ."/documents/?tenantIdentifier=kenya";
												$filePath = $cashflowSummaryData['realFilePath'];
													//getting the file name
															$info = new SplFileInfo($filePath);
																$filename = $info->getFilename();
												$data['postData'] =	array(
																								"file" => new CurlFile($filePath, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', $filename),
																								"name" => "image_CashflowModel",
																								"locale" => "en",
																							  "appTableId" => $cashflowSummaryData['loanId'],
																							);
												$feedback =	$this->cashflowlibrary->curlUploadFile($data); //sending the file
												$msg = json_decode($feedback); //decoding the feedback
													if(isset($msg->resourceId)){ //if success
															$feedback = array('status' => "success", 'code' => http_response_code(200));
														//	return json_encode($feedback);
															return $feedback;
													}
			}
}
