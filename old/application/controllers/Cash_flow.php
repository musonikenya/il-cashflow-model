<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Cash_flow extends CI_Controller {

	public function __construct()
        {
                parent::__construct();
        }
public function index()
	{
// Report all errors except E_WARNING
 error_reporting(E_ALL & ~(E_WARNING | E_NOTICE));
/*
{"officeId":10,"clientId":1309,"loanId":152847,"resourceId":152847} ->Webhook post notification
CREATE TABLE `cash-flow`.`post_notification`
( `id` INT NULL AUTO_INCREMENT , `officeId` INT NULL , `clientId` INT NULL , `loanId` INT NULL ,
 `resourceId` INT NULL , `timestamp` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ,
 `processed` BOOLEAN NULL , PRIMARY KEY (`id`)) ENGINE = InnoDB;
*/
/*
$webhookPost = file_get_contents("php://input");
					if(isset($webhookPost))
							{
								$notification = json_decode($webhookPost);
								http_response_code(200); //ok

								$this->load->helper('file');

										if ( !write_file('./docs/hookPosts-true.txt', $webhookPost . '\r\n', 'w+')){
															// echo 'Unable to write the file';
														 $data['msg'] = 'Failed. Unable to write data to file';
														write_file('./docs/write-fail.txt', $data . "\r\n", 'w+');
													}


													if(isset($notification->loanId))
													{
														$webHookData = array(
														'officeId' => $notification->officeId,
														'clientId' => $notification->clientId,
														'loanId' => $notification->loanId,
														'resourceId' => $notification->resourceId,
														'processed' => 0,
														'timestamp' => date('Y-m-d H:i:s')
													);

													$accessArray =	$this->CashFlow->webHookRecord($webHookData); //saving the data to db

													write_file('./docs/hookPosts-Processed-2.txt', $webHookData . "\r\n", 'w+');
																//Processing application
													$cashflowFile =	$this->computeCashFlowModel($webHookData);

													$cashflowFile =	$this->computecashflowmodel->computeCashFlowModel($webHookData);
													//To view all the errors generated by this function...move the method to this script.
													$cashflowSummaryData = 	$this->generatefinancialsummary->generateFinancialSummary($cashflowFile); //getting the summary
															//write logic that checks whether the response has resource id if it does not use post/put
															$summaryStatus =	$this->postFinancialSummary($cashflowSummaryData);
																//write logic that ckecks if the upload is sucessful with the resource id
															$fileStatus =	$this->uploadCashflowModel($cashflowSummaryData);

													}else{
														http_response_code(204); //no content
													}

							}else {
								http_response_code(204); //no content
							}
*/

//This block is to be used in testing the flow of data
					$webHookData = array(
									'loanId' => 152878,
									'officeId' => 10,
								);


								$startTime = microtime(true);
								$cashflowFile =	$this->computecashflowmodel->computeCashFlowModel($webHookData);
								//To view all the errors generated by this function...move the method to this script.
								$cashflowSummaryData = 	$this->generatefinancialsummary->generateFinancialSummary($cashflowFile); //getting the summary
										//write logic that checks whether the response has resource id if it does not use post/put
										$summaryStatus =	$this->postFinancialSummary($cashflowSummaryData);
											//write logic that ckecks if the upload is sucessful with the resource id
										$fileStatus =	$this->uploadCashflowModel($cashflowSummaryData);
								echo "<pre>";
								print_r(json_decode($summaryStatus));
								echo "<br>";
								echo "<br>";
								print_r(json_decode($fileStatus));
								echo "</pre>";
								echo "Reached here (This is the end of the file execution at index) <br>";
								echo "Elapsed time is: ". (microtime(true) - $startTime) ." seconds";

	}

function postFinancialSummary($cashflowSummaryData)
			{
				/*
				//response for the edit.

{"officeId":8,"clientId":69401,"loanId":152878,"resourceId":152878,"changes":{"Other_income":"10000","Minimum_monthly_cash_flow_2":"262128.49",
"Month_of_maximum_cashflow":"August 2017","Total_yearly_cash_flow_2":"19122946.87","locale":"en_GB","Animals_farmed":"Chicken_layers, Cows_dairy,
Cats, Chicken: sale of ex layers","Month_of_minimum_cashflow":"August 2017","Has_always_repaid_in_time_2":"No",
"Average_loan_borrowed_in_the_past_2":"28000","Month_by_when_installment_size_ratio_60":"February 2018","Max_loan_borrowed_in_the_past_2":"60000",
"Indebtness_ratio_2":"0","Crops_planted":"Cabbages, Mangoes, , Maize, Guava, 0","Approval_recommendations":"Review: loan size ratio \u003e60%,
provide principal and/or interest grace periods until February 2018, ","Installment_amount_after_grace_periods":"0","dateFormat":"yyyy-MM-dd",
"Loan_size_ratio2":"999","loan_id":152878}}
				*/
										$data['urlExtention'] = "/datatables/cct_CashFlowFinancialSummary/" . $cashflowSummaryData['loanId'] ;
										$data['postData'] = json_encode($cashflowSummaryData['summary']);
										$result =	$this->cashflowlibrary->curlPostData($data); //uploading data

			}

function uploadCashflowModel($cashflowSummaryData)
			{
										$data['urlExtention'] = "/cct_CashFlowFinancialSummary/". $cashflowSummaryData['loanId'] ."/documents/?tenantIdentifier=kenya";

												$filePath = $cashflowSummaryData['realFilePath'];
													//getting the file name
															$info = new SplFileInfo($filePath);
																$filename = $info->getFilename();
														//  $finfo = finfo_open(FILEINFO_MIME_TYPE);
															//	$mime = finfo_file($finfo, $filePath);
												$data['postData'] =	array(
																								"file" => new CurlFile($filePath, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', $filename),
																								"name" => "image_CashflowModel",
																								"locale" => "en",
																							  "appTableId" => $cashflowSummaryData['loanId'],
																							);
												$feedback =	$this->cashflowlibrary->curlUploadFile($data); //sending the file
																								echo "<pre>";
																								print_r($feedback);
																								echo "</pre>";
																								exit;
			}
}
